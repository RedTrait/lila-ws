http.port = 9664
http.use-nginx-forwarded-ip = no
mongo.uri = "mongodb://localhost:27017/lichess?appName=lila-ws"
study.mongo.uri = ${mongo.uri}
yolo.mongo.uri = ${mongo.uri}
redis.uri = "redis://127.0.0.1"
csrf.origin = "http://localhost:9663"
cookie.name = "lila2"

socialGraph {
  logCapacity = 10 # prod = 19
}

pekko {
  loggers = ["org.apache.pekko.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  stdout-loglevel = "INFO"
  logging-filter = "org.apache.pekko.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = off
  log-dead-letters-during-shutdown = off
}

reactivemongo {
  mongo-async-driver = {
    loglevel = "WARN"
    stdout-loglevel = "WARN"
    log-dead-letters = off
  }
}

netty {
  threads = 0 # auto

  flush {
    interval-millis = 1 # interval between flush cycles, set to 0 to disable flush queue
    max-delay-millis = 500 # max flush step targets this threshold if passed
    step = 500 # minimum number of channels to flush per interval
  }
}

storm.secret = "somethingElseInProd"
oauth.secret = "somethingElseInProd"

kamon {
  environment.service = "lila-ws"
  metric.tick-interval = 60 seconds
  init.hide-banner = true
  influxdb {
    # hostname = monitor.lichess.ovh # lila-ws starts kamon when this is set
    hostname = ""
    port = 8086
    database = "kamon"
    percentiles = [50.0, 75.0, 90.0, 99.0, 99.9]
    protocol = "http"
    post-empty-distributions = true
    precision = "s"
    environment-tags {
      include-service = yes
      include-host = yes
      include-instance = yes
    }
  }
  modules {
    jvm-metrics.enabled = yes
    process-metrics.enabled = yes
    host-metrics.enabled = no
    prometheus-reporter.enabled = yes
  }
  prometheus {
    buckets {
      default-buckets = [ 10, 100, 1000, 10000, 100000 ]
      time-buckets = [ 0.01, 0.05, 0.1, 0.5, 1, 5, 10 ]
      information-buckets = [ 512, 2048, 16384, 524288, ]
    }
  }
}
